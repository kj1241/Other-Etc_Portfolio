void MyVertexShader1(
        float4 position        : POSITION,      
        out float4 oPosition    : POSITION,      
        uniform float4x4 worldViewMatrix)
{
    oPosition = mul(worldViewMatrix, position);
}
 
void MyFragmentShader1(out float4 color : COLOR)
 
{
    color = float4(0,0,1,0);
}



void MyVertexShader2(
        float4 position        : POSITION,      
        out float4 oPosition    : POSITION,  
		float2 uv 			: TEXCOORD0,
		out float2 oUv       : TEXCOORD0,
        uniform float4x4 worldViewMatrix)
{
    oPosition = mul(worldViewMatrix, position);
	oUv = uv;

}
 
void MyFragmentShader2(float2 uv 			: TEXCOORD0,
						out float4 color : COLOR,
						uniform sampler2D texture)
 
{
    color = tex2D(texture, uv);
}



void MyVertexShader3(
        float4 position        : POSITION,      
        out float4 oPosition    : POSITION,  
		float2 uv 			: TEXCOORD0,
		out float2 oUv       : TEXCOORD0,
        uniform float4x4 worldViewMatrix)
{
    oPosition = mul(worldViewMatrix, position);
	oUv = uv;

}
 
void MyFragmentShader3(float2 uv 			: TEXCOORD0,
						out float4 color : COLOR,
						uniform sampler2D texture)
 
{
    color = float4(0,1,0,0);
}


void MyVertexShader4(
        float4 position        : POSITION,
        out float4 oPosition    : POSITION, 
		float4 color		:COLOR,
		out float4 ocolor		:COLOR,		
        uniform float4x4 worldViewMatrix)
{
    oPosition = mul(worldViewMatrix, position);
	ocolor = color;

}
 
void MyFragmentShader4(	float4 color : COLOR,
						out float4 oColor : COLOR)
 
{
    oColor = color;
}

void MyVertexShader5( uniform float pulseTime,
        float4 position        : POSITION,      
        out float4 oPosition    : POSITION,  
		float2 uv 			: TEXCOORD0,
		out float2 oUv       : TEXCOORD0,
        uniform float4x4 worldViewMatrix)
{
    oPosition = mul(worldViewMatrix, position);
	oPosition.x *= (2+sin(pulseTime));
	oUv = uv;

}

void MyFragmentShader5(float2 uv 			: TEXCOORD0,
						out float4 color : COLOR,
						uniform sampler2D texture)
{
	float4 temp_color = tex2D(texture, uv);
	float greyvalue = temp_color.r * 0.3 + temp_color.g * 0.59 + temp_color.b * 0.11;
	color = float4(greyvalue,greyvalue,greyvalue,0);
	
}

void MyFragmentShader6(float2 uv 			: TEXCOORD0,
						out float4 color : COLOR,
						uniform sampler2D texture)
{
	float4 temp_color = tex2D(texture, uv);
	color = float4( 1.0 - temp_color.r,1.0 - temp_color.g, 1.0 - temp_color.b,0);
	
}

void MyFragmentShader7(float2 uv 			: TEXCOORD0,
						out float4 color : COLOR,
						uniform sampler2D texture)
{
	float4 temp_color = tex2D(texture, uv);
	color = float4(temp_color.r,temp_color.b, temp_color.g,0);

}

void MyFragmentShader8(float2 uv 			: TEXCOORD0,
						out float4 color : COLOR,
						uniform sampler2D texture)
{
	float num = 50;
	float stepsize = 1.0/num;
	
	float2 fragment = float2(stepsize * floor(uv.x * num),stepsize *  floor(uv.y * num));
	color = tex2D(texture, fragment);

}

void MyFragmentShader9(float2 uv 			: TEXCOORD0,
						out float4 color : COLOR,
						uniform sampler2D texture,
						uniform float numpixels)
{
	float num = numpixels;
	float stepsize = 1.0/num;
	
	float2 fragment = float2(stepsize * floor(uv.x * num),stepsize *  floor(uv.y * num));
	color = tex2D(texture, fragment);
}

void MyFragmentShader10(float2 uv 			: TEXCOORD0,
						out float4 color : COLOR,
						uniform sampler2D texture,
						uniform float4 factors
					)
{
	color = tex2D(texture, uv);
	color *= factors;	
}

